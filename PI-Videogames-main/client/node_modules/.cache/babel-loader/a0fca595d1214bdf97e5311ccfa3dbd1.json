{"ast":null,"code":"import _slicedToArray from\"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{Link}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';import{getAllVideogames,getFilters,getGenres,getOrders,setLoading}from'../../actions';import h from'./Home.module.css';import Paginate from'../Paginate/Paginate';import NavBar from\"../NavBar/NavBar\";import xbox from'../Icons/xbox-2.png';import play from'../Icons/playstation.png';import rating from'../Icons/star-2.png';import nintendo from'../Icons/nintendo.png';import wii from'../Icons/wii-u.png';import android from'../Icons/android.png';import linux from'../Icons/linux.png';import pc from'../Icons/pc.png';import mac from'../Icons/mac.png';import loadingGif from'../Icons/loadingII.gif';import{NotFound}from'../Modals/ModalNotFound';import Filters from'../Filters/Filters';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Home=function Home(){var dispatch=useDispatch();// Filters - Local States\nvar _useState=useState({genres:'All Genres',platforms:'All Platforms',games:'All Games'}),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];// inicializamos estado local selected para que cuando usemos el botón clear filters seteemos estos valores por defecto en cada lista de filtros.\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),searchByName=_useState4[0],setSearchByName=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),filterByGenre=_useState6[0],setFilterByGenre=_useState6[1];// Initial state en arreglo vacío para ir pusheando los valores que seleccionamos en la lista desplegada y que podamos filtrar por esos valores al mismo tiempo (hacemos lo mismo con arreglo platforms)\nvar _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),filterByOrigin=_useState8[0],setFilterByOrigin=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),filterByPlatforms=_useState10[0],setFilterByPlatforms=_useState10[1];var _useState11=useState({origin:'',genres:[],platforms:[]}),_useState12=_slicedToArray(_useState11,2),renderFilters=_useState12[0],setRenderFilters=_useState12[1];// Estado para renderizar los filtros que vamos aplicando para que el usuario pueda verlos y eliminarlos si quiere.\nvar allGames=useSelector(function(state){return state.filteredVideogames;});// Estado global que trae los juegos filtrados (en principio es una copia de TODOS los videojuegos)\nvar loading=useSelector(function(state){return state.loading;});// Estado global de loading (valor inicial true)\n// Paginate - Local States\nvar _useState13=useState(1),_useState14=_slicedToArray(_useState13,2),currentPage=_useState14[0],setCurrentPage=_useState14[1];var _useState15=useState(15),_useState16=_slicedToArray(_useState15,1),gamesPerPage=_useState16[0];// seteamos la cantidad de juegos que mostraremos por página\nvar indexOfLastGame=currentPage*gamesPerPage;var indexOfFirstGame=indexOfLastGame-gamesPerPage;var currentGames=allGames.slice(indexOfFirstGame,indexOfLastGame);// Instanciamos constante donde guardaremos los juegos que mostraremos por página según los indices correspondientes.\nvar paginate=function paginate(pageNumber){return setCurrentPage(pageNumber);};// seteamos el estado currentPage con el número de página que le pasemos por parámetro. Invocaremos esta función al hacer click en el botón de la página.\nvar prevPage=function prevPage(){return setCurrentPage(currentPage-1);};var nextPage=function nextPage(){return setCurrentPage(currentPage+1);};var _useState17=useState({startIndex:0,endIndex:3}),_useState18=_slicedToArray(_useState17,2),index=_useState18[0],setIndex=_useState18[1];useEffect(function(){// despachamos las actions para obtener los juegos y los géneros cada vez que se monte el componente.\ndispatch(getGenres());if(!allGames.length)dispatch(getAllVideogames());// loading pasa a false.\nelse dispatch(setLoading(false));},[]);useEffect(function(){setCurrentPage(1);},[allGames]);useEffect(function(){return function(){return dispatch(setLoading());};},[]);// despachamos la action para setear el loading a true cada vez que se desmonte el componente.\nvar handleOnSelectOrder=function handleOnSelectOrder(e){setCurrentPage(1);var orderGames=e.target.value;dispatch(getOrders(orderGames));};var handleOnClear=function handleOnClear(){// función para limpiar los filtros. Seteamos nuestros estados locales a sus valores por defecto y despachamos la action de filtrado por dichos valores (no le paso los estados directamente porque la action puede despacharse y tal vez los mismos no se actualizaron aún)\nsetSelected({genres:'All Genres',platforms:'All Platforms',games:'All Games'});setFilterByGenre([]);setFilterByOrigin(null);setFilterByPlatforms([]);setSearchByName(null);setIndex({startIndex:0,endIndex:3});setRenderFilters({origin:'',genres:[],platforms:[]});dispatch(getFilters([],null,null,[]));};return/*#__PURE__*/_jsxs(\"header\",{className:h.Home,children:[/*#__PURE__*/_jsx(NavBar,{filterByGenre:filterByGenre,filterByOrigin:filterByOrigin,searchByName:searchByName,filterByPlatforms:filterByPlatforms,handleOnClear:handleOnClear}),/*#__PURE__*/_jsxs(\"div\",{className:h.container,children:[/*#__PURE__*/_jsx(\"div\",{className:h.firstC,children:/*#__PURE__*/_jsx(Filters,{index:index,setIndex:setIndex,setCurrentPage:setCurrentPage,searchByName:searchByName,setSearchByName:setSearchByName,filterByGenre:filterByGenre,setFilterByGenre:setFilterByGenre,filterByOrigin:filterByOrigin,setFilterByOrigin:setFilterByOrigin,filterByPlatforms:filterByPlatforms,setFilterByPlatforms:setFilterByPlatforms,renderFilters:renderFilters,setRenderFilters:setRenderFilters,handleOnClear:handleOnClear,selected:selected,setSelected:setSelected})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:h.orders,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Sort by: \"}),/*#__PURE__*/_jsxs(\"select\",{defaultValue:\"alphabetic\",name:\"alphabetic\",onChange:function onChange(e){return handleOnSelectOrder(e);},children:[/*#__PURE__*/_jsx(\"option\",{disabled:true,value:\"alphabetic\",children:\"Name\"}),/*#__PURE__*/_jsx(\"option\",{value:\"a-z\",children:\"A-Z\"}),/*#__PURE__*/_jsx(\"option\",{value:\"z-a\",children:\"Z-A\"})]}),/*#__PURE__*/_jsxs(\"select\",{defaultValue:\"rating\",name:\"rating\",onChange:function onChange(e){return handleOnSelectOrder(e);},children:[/*#__PURE__*/_jsx(\"option\",{disabled:true,value:\"rating\",children:\"Rating\"}),/*#__PURE__*/_jsx(\"option\",{value:\"descending\",children:\"Highest\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ascending\",children:\"Lowest\"})]})]}),allGames.length>=100&&/*#__PURE__*/_jsx(\"h1\",{className:h.trending,children:\"Trending now\"}),/*#__PURE__*/_jsx(\"div\",{className:h.vgContainer,children:!loading?currentGames.length?currentGames.map(function(vg){return/*#__PURE__*/_jsx(\"div\",{className:h.cardC,children:/*#__PURE__*/_jsxs(Link,{className:h.link,to:\"/videogames/\".concat(vg.id),children:[/*#__PURE__*/_jsxs(\"div\",{className:h.cardRating,children:[/*#__PURE__*/_jsx(\"p\",{children:vg.rating}),/*#__PURE__*/_jsx(\"img\",{alt:\"ratingIcon\",src:rating})]}),/*#__PURE__*/_jsxs(\"div\",{className:h.Card,children:[/*#__PURE__*/_jsx(\"img\",{className:h.vgImage,src:vg.background_image,alt:\"videogameImage\"}),/*#__PURE__*/_jsx(\"div\",{className:h.cardTitle,children:vg.name}),/*#__PURE__*/_jsx(\"div\",{className:h.cardGenres,children:vg.genres.map(function(g){return g.name;}).join(' | ')}),/*#__PURE__*/_jsxs(\"div\",{className:h.platforms,children:[vg.platforms.filter(function(p){return p.includes('Xbox');}).length>0&&/*#__PURE__*/_jsx(\"img\",{className:h.imageP,src:xbox,alt:\"xbox\"}),vg.platforms.filter(function(p){return p.includes('PlayStation');}).length>0&&/*#__PURE__*/_jsx(\"img\",{className:h.imageP,src:play,alt:\"ps\"}),vg.platforms.filter(function(p){return p.includes('Wii U');}).length>0&&/*#__PURE__*/_jsx(\"img\",{className:h.imageP,src:wii,alt:\"wii\"}),vg.platforms.filter(function(p){return p.includes('Nintendo');}).length>0&&/*#__PURE__*/_jsx(\"img\",{className:h.imageP,src:nintendo,alt:\"nintendo\"}),vg.platforms.filter(function(p){return p.includes('Android');}).length>0&&/*#__PURE__*/_jsx(\"img\",{className:h.imageP,src:android,alt:\"android\"}),vg.platforms.filter(function(p){return p.includes('Linux');}).length>0&&/*#__PURE__*/_jsx(\"img\",{className:h.imageP,src:linux,alt:\"linux\"}),vg.platforms.filter(function(p){return p.includes('PC');}).length>0&&/*#__PURE__*/_jsx(\"img\",{className:h.imageP,src:pc,alt:\"pc\"}),vg.platforms.filter(function(p){return p.includes('macOS');}).length>0&&/*#__PURE__*/_jsx(\"img\",{className:h.imageP,src:mac,alt:\"mac\"})]})]},vg.id)]})},vg.id);}):/*#__PURE__*/_jsx(NotFound,{}):/*#__PURE__*/_jsxs(\"div\",{className:h.loading,children:[/*#__PURE__*/_jsx(\"img\",{src:loadingGif,alt:\"loading\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"loading...\"})]})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:h.paginate,children:/*#__PURE__*/_jsx(Paginate,{gamesPerPage:gamesPerPage,allGames:allGames.length,currentPage:currentPage,paginate:paginate,prevPage:prevPage,nextPage:nextPage,index:index,setIndex:setIndex})})]});};export default Home;","map":{"version":3,"names":["React","useEffect","useState","Link","useDispatch","useSelector","getAllVideogames","getFilters","getGenres","getOrders","setLoading","h","Paginate","NavBar","xbox","play","rating","nintendo","wii","android","linux","pc","mac","loadingGif","NotFound","Filters","Home","dispatch","genres","platforms","games","selected","setSelected","searchByName","setSearchByName","filterByGenre","setFilterByGenre","filterByOrigin","setFilterByOrigin","filterByPlatforms","setFilterByPlatforms","origin","renderFilters","setRenderFilters","allGames","state","filteredVideogames","loading","currentPage","setCurrentPage","gamesPerPage","indexOfLastGame","indexOfFirstGame","currentGames","slice","paginate","pageNumber","prevPage","nextPage","startIndex","endIndex","index","setIndex","length","handleOnSelectOrder","e","orderGames","target","value","handleOnClear","container","firstC","orders","trending","vgContainer","map","vg","cardC","link","id","cardRating","Card","vgImage","background_image","cardTitle","name","cardGenres","g","join","filter","p","includes","imageP"],"sources":["/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Home/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {  useDispatch, useSelector } from 'react-redux';\nimport { getAllVideogames, getFilters, getGenres, getOrders, setLoading } from '../../actions';\nimport h from './Home.module.css';\nimport Paginate from '../Paginate/Paginate';\nimport NavBar from \"../NavBar/NavBar\";\nimport xbox from '../Icons/xbox-2.png'\nimport play from '../Icons/playstation.png'\nimport rating from '../Icons/star-2.png'\nimport nintendo from '../Icons/nintendo.png'\nimport wii from '../Icons/wii-u.png'\nimport android from '../Icons/android.png'\nimport linux from '../Icons/linux.png'\nimport pc from '../Icons/pc.png'\nimport mac from '../Icons/mac.png'\nimport loadingGif from '../Icons/loadingII.gif'\nimport {NotFound} from '../Modals/ModalNotFound';\nimport Filters from '../Filters/Filters';\n\n\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    \n    // Filters - Local States\n    const[selected, setSelected] = useState({genres: 'All Genres', platforms: 'All Platforms', games: 'All Games'}); // inicializamos estado local selected para que cuando usemos el botón clear filters seteemos estos valores por defecto en cada lista de filtros.\n    const [searchByName, setSearchByName] = useState(null);\n    const [filterByGenre, setFilterByGenre] = useState([]); // Initial state en arreglo vacío para ir pusheando los valores que seleccionamos en la lista desplegada y que podamos filtrar por esos valores al mismo tiempo (hacemos lo mismo con arreglo platforms)\n    const [filterByOrigin, setFilterByOrigin] = useState(null)\n    const [filterByPlatforms, setFilterByPlatforms] = useState([]);\n    const [renderFilters, setRenderFilters] = useState({origin: '', genres:[], platforms:[]}); // Estado para renderizar los filtros que vamos aplicando para que el usuario pueda verlos y eliminarlos si quiere.\n\n\n    const allGames = useSelector(state => state.filteredVideogames) // Estado global que trae los juegos filtrados (en principio es una copia de TODOS los videojuegos)\n    const loading = useSelector(state => state.loading); // Estado global de loading (valor inicial true)\n    \n    // Paginate - Local States\n    const [currentPage, setCurrentPage] = useState(1);\n    const [gamesPerPage] = useState(15); // seteamos la cantidad de juegos que mostraremos por página\n    const indexOfLastGame = currentPage * gamesPerPage;\n    const indexOfFirstGame = indexOfLastGame - gamesPerPage;\n    const currentGames = allGames.slice(indexOfFirstGame, indexOfLastGame) // Instanciamos constante donde guardaremos los juegos que mostraremos por página según los indices correspondientes.\n    const paginate = (pageNumber) => setCurrentPage(pageNumber); // seteamos el estado currentPage con el número de página que le pasemos por parámetro. Invocaremos esta función al hacer click en el botón de la página.\n    const prevPage= () => setCurrentPage(currentPage - 1);\n    const nextPage= () => setCurrentPage(currentPage + 1);\n    const [index, setIndex] = useState({startIndex: 0, endIndex: 3})\n\n\n   useEffect(() => { // despachamos las actions para obtener los juegos y los géneros cada vez que se monte el componente.\n       dispatch(getGenres())\n       if(!allGames.length) dispatch(getAllVideogames()) // loading pasa a false.\n       else dispatch(setLoading(false))\n    }, [])\n    \n    useEffect(() => { \n        setCurrentPage(1)\n    }, [allGames])\n\n    useEffect(() => {return () => dispatch(setLoading())}, []) // despachamos la action para setear el loading a true cada vez que se desmonte el componente.\n\n\n    const handleOnSelectOrder = (e) => { \n        setCurrentPage(1)\n        let orderGames = e.target.value;\n        dispatch(getOrders(orderGames))\n      }\n\n      const handleOnClear = () => { // función para limpiar los filtros. Seteamos nuestros estados locales a sus valores por defecto y despachamos la action de filtrado por dichos valores (no le paso los estados directamente porque la action puede despacharse y tal vez los mismos no se actualizaron aún)\n        setSelected({genres: 'All Genres', platforms: 'All Platforms', games: 'All Games'})\n        setFilterByGenre([])\n        setFilterByOrigin(null)\n        setFilterByPlatforms([])\n        setSearchByName(null)\n        setIndex({startIndex: 0, endIndex: 3})\n        setRenderFilters({origin: '', genres:[], platforms:[]})\n        dispatch(getFilters([], null, null, []))\n      }\n\n    return (\n        \n        <header className={h.Home}>\n                     <NavBar filterByGenre={filterByGenre} filterByOrigin={filterByOrigin} searchByName={searchByName} filterByPlatforms={filterByPlatforms} handleOnClear={handleOnClear}>\n                    </NavBar>\n\n         <div className={h.container}>\n\n              <div className={h.firstC}>\n                 <Filters index={index} setIndex={setIndex} setCurrentPage={setCurrentPage} searchByName={searchByName} setSearchByName={setSearchByName} filterByGenre={filterByGenre} setFilterByGenre={setFilterByGenre} filterByOrigin={filterByOrigin} setFilterByOrigin={setFilterByOrigin} filterByPlatforms={filterByPlatforms} setFilterByPlatforms={setFilterByPlatforms} renderFilters={renderFilters} setRenderFilters={setRenderFilters} handleOnClear={handleOnClear} selected={selected} setSelected={setSelected}></Filters>\n             </div>\n                    <div>\n                    <div className={h.orders}>\n                        <h4>Sort by: </h4>\n                     <select defaultValue='alphabetic' name='alphabetic' onChange={(e) => handleOnSelectOrder(e)}>\n                                <option disabled value='alphabetic'>Name</option>\n                                <option value='a-z'>A-Z</option>\n                                <option value='z-a'>Z-A</option>\n                         </select>\n                        <select defaultValue='rating' name='rating' onChange={(e) => handleOnSelectOrder(e)}>\n                            <option disabled value='rating'>Rating</option>\n                                <option value='descending'>Highest</option>\n                                <option  value='ascending'>Lowest</option>\n                        </select>\n                    </div>\n\n                    {allGames.length >= 100 && <h1 className={h.trending}>Trending now</h1>}\n                    \n                    <div className={h.vgContainer}>\n                         {!loading ? (currentGames.length ? currentGames.map(vg => (\n                            <div key={vg.id} className={h.cardC}>\n                            <Link className={h.link} to={`/videogames/${vg.id}`}>\n                                    <div className={h.cardRating}>\n                                        <p>{vg.rating}</p>\n                                        <img alt='ratingIcon' src={rating}></img>\n                                    </div>\n                                    <div className={h.Card} key={vg.id}>\n                                    <img className={h.vgImage} src={vg.background_image} alt='videogameImage'/>\n                                         <div className ={h.cardTitle}>{vg.name}</div>\n                                         <div className ={h.cardGenres}>{vg.genres.map(g => g.name).join(' | ')}</div>\n                                  \n                                    <div className={h.platforms}>\n                                         {vg.platforms.filter(p => p.includes('Xbox')).length > 0 && <img className={h.imageP} src={xbox} alt='xbox'></img>}\n                                         {vg.platforms.filter(p => p.includes('PlayStation')).length > 0 && <img className={h.imageP} src={play} alt='ps'></img>}\n                                         {vg.platforms.filter(p => p.includes('Wii U')).length > 0 &&  <img className={h.imageP} src={wii} alt='wii'></img>}\n                                         {vg.platforms.filter(p => p.includes('Nintendo')).length > 0 &&  <img className={h.imageP} src={nintendo} alt='nintendo'></img>}\n                                         {vg.platforms.filter(p => p.includes('Android')).length > 0 &&  <img className={h.imageP} src={android} alt='android'></img>}\n                                         {vg.platforms.filter(p => p.includes('Linux')).length > 0 &&  <img className={h.imageP} src={linux} alt='linux'></img>}\n                                         {vg.platforms.filter(p => p.includes('PC')).length > 0 &&  <img className={h.imageP} src={pc} alt='pc'></img>}\n                                         {vg.platforms.filter(p => p.includes('macOS')).length > 0 &&  <img className={h.imageP} src={mac} alt='mac'></img>}\n                                    </div>\n                            </div></Link> \n                            </div>)) : <NotFound/>)\n                            : <div className={h.loading}>\n                                <img src={loadingGif} alt='loading'></img>\n                                <h1>loading...</h1>\n                              </div>\n                            }\n                    </div>\n                    </div>\n    \n            </div>\n                    <div className={h.paginate}>\n                    <Paginate  gamesPerPage={gamesPerPage}  allGames={allGames.length}  currentPage={currentPage}\n                    paginate={paginate} prevPage={prevPage}  nextPage={nextPage} index={index} setIndex={setIndex}/>\n                    </div>\n        </header>\n    )\n}\n\nexport default Home;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}