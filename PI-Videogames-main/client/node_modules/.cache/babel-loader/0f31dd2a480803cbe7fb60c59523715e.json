{"ast":null,"code":"import { GET_VIDEOGAME_DETAIL, GET_SEARCH_VIDEOGAMES, DELETE_VIDEOGAME, CREATE_VIDEOGAME, GET_ALL_VIDEOGAMES, GET_GENRES, GET_FILTERS, GET_ORDERS } from '../actions/index';\nconst initialState = {\n  filteredVideogames: [],\n  videogames: [],\n  videogameDetail: [],\n  genres: [],\n  orders: [],\n  msg: ''\n};\nexport default function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ALL_VIDEOGAMES:\n      return { ...state,\n        videogames: action.payload,\n        filteredVideogames: action.payload\n      };\n\n    case GET_SEARCH_VIDEOGAMES:\n      return { ...state,\n        videogames: action.payload\n      };\n\n    case GET_VIDEOGAME_DETAIL:\n      return { ...state,\n        videogameDetail: [action.payload]\n      };\n\n    case CREATE_VIDEOGAME:\n      return { ...state,\n        videogames: [...state.videogames, action.payload.game],\n        msg: action.payload.msg\n      };\n\n    case DELETE_VIDEOGAME:\n      return { ...state,\n        videogames: state.videogames.filter(game => game.id !== action.payload)\n      };\n\n    case GET_GENRES:\n      return { ...state,\n        genres: action.payload\n      };\n\n    case GET_FILTERS:\n      let filters = [...state.videogames];\n      let byOrigin = action.payload.filterByOrigin;\n      let byGenre = action.payload.filterByGenre;\n      let byName = action.payload.searchByName;\n      console.log(byName);\n      if (byName) filters = filters.filter(vg => vg.name.toLowerCase().includes(byName.toLowerCase()));\n\n      if (byGenre !== 'all') {\n        filters = filters.filter(videogame => {\n          let genre = videogame.genres.find(vg => vg.name.includes(byGenre));\n          return genre;\n        });\n      }\n\n      if (byOrigin === 'all') filters = [...state.videogames];\n      if (byOrigin === 'db') filters = filters.filter(videogame => videogame.createdOnDb === true);\n      if (byOrigin === 'api') filters = filters.filter(videogame => videogame.createdOnDb === undefined);\n      return { ...state,\n        filteredVideogames: filters\n      };\n\n    case GET_ORDERS:\n      let vgOrder = [...state.filteredVideogames];\n      let byOrder = action.payload;\n      let byRating = action.payload;\n      if (byOrder === 'ascending') vgOrder = vgOrder.sort((a, b) => {\n        if (a.rating < b.rating) return 1;\n        if (a.rating > b.rating) return -1;\n        return 0;\n      });\n      if (byOrder === 'descending') vgOrder = vgOrder.sort((a, b) => {\n        if (a.rating > b.rating) return 1;\n        if (a.rating < b.rating) return -1;\n        return 0;\n      });\n      if (byRating === 'a-z') vgOrder = vgOrder.sort((a, b) => a.name.localeCompare(b.name));\n      if (byRating === 'z-a') vgOrder = vgOrder.sort((a, b) => b.name.localeCompare(a.name));\n      return { ...state,\n        filteredVideogames: vgOrder\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"names":["GET_VIDEOGAME_DETAIL","GET_SEARCH_VIDEOGAMES","DELETE_VIDEOGAME","CREATE_VIDEOGAME","GET_ALL_VIDEOGAMES","GET_GENRES","GET_FILTERS","GET_ORDERS","initialState","filteredVideogames","videogames","videogameDetail","genres","orders","msg","rootReducer","state","action","type","payload","game","filter","id","filters","byOrigin","filterByOrigin","byGenre","filterByGenre","byName","searchByName","console","log","vg","name","toLowerCase","includes","videogame","genre","find","createdOnDb","undefined","vgOrder","byOrder","byRating","sort","a","b","rating","localeCompare"],"sources":["/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/reducers/index.js"],"sourcesContent":["import { GET_VIDEOGAME_DETAIL, GET_SEARCH_VIDEOGAMES, DELETE_VIDEOGAME, CREATE_VIDEOGAME, GET_ALL_VIDEOGAMES, GET_GENRES, GET_FILTERS, GET_ORDERS} from '../actions/index';\n\n\nconst initialState = {\n    filteredVideogames: [],\n    videogames: [],\n    videogameDetail:[],\n    genres: [],\n    orders: [],\n    msg: ''\n}\n\nexport default function rootReducer(state = initialState, action) {\n\n    switch(action.type) {\n        case GET_ALL_VIDEOGAMES: return {...state, videogames: action.payload, filteredVideogames:action.payload}\n\n        case GET_SEARCH_VIDEOGAMES: return {...state, videogames: action.payload}\n\n        case GET_VIDEOGAME_DETAIL: return {...state, videogameDetail: [action.payload]}\n\n        case CREATE_VIDEOGAME: return {...state, videogames: [...state.videogames, action.payload.game], msg: action.payload.msg}\n\n        case DELETE_VIDEOGAME: return {...state, videogames: state.videogames.filter(game => game.id !== action.payload)}\n\n        case GET_GENRES: return {...state, genres: action.payload}\n\n        case GET_FILTERS: \n        let filters = [...state.videogames]\n        let byOrigin = action.payload.filterByOrigin\n        let byGenre = action.payload.filterByGenre\n        let byName = action.payload.searchByName\n        console.log(byName)\n      \n        if(byName) filters = filters.filter(vg => vg.name.toLowerCase().includes(byName.toLowerCase()))\n\n        if(byGenre !== 'all') { \n                filters = filters.filter(videogame => {\n                let genre = videogame.genres.find(vg => vg.name.includes(byGenre))\n                return genre})\n        }\n        \n        if(byOrigin === 'all') filters =[...state.videogames]\n        if(byOrigin === 'db') filters = filters.filter(videogame => videogame.createdOnDb === true)\n        if(byOrigin === 'api')  filters = filters.filter(videogame => videogame.createdOnDb === undefined)\n        \n        return {...state, filteredVideogames: filters}\n\n        case GET_ORDERS:\n        let vgOrder = [...state.filteredVideogames]\n        let byOrder = action.payload\n        let byRating = action.payload\n    \n        if(byOrder === 'ascending') vgOrder = vgOrder.sort((a,b) => {\n            if(a.rating < b.rating) return 1\n            if(a.rating > b.rating) return -1\n            return 0})\n\n        if(byOrder === 'descending') vgOrder = vgOrder.sort((a,b) => {\n             if(a.rating > b.rating) return 1\n             if(a.rating < b.rating) return -1\n             return 0})\n\n        if(byRating === 'a-z') vgOrder = vgOrder.sort((a,b) => a.name.localeCompare(b.name))\n        if(byRating === 'z-a') vgOrder = vgOrder.sort((a,b) => b.name.localeCompare(a.name))\n\n        return {...state, filteredVideogames: vgOrder}\n        \n        default: return {...state}\n\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}