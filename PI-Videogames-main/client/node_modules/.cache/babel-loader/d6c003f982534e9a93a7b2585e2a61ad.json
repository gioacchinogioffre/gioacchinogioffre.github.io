{"ast":null,"code":"var _jsxFileName = \"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Paginate/Paginate.js\";\nimport React from \"react\";\nimport s from './Paginate.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Paginate = props => {\n  const {\n    gamesPerPage,\n    allGames,\n    currentPage,\n    paginate,\n    prevPage,\n    nextPage\n  } = props;\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(allGames / gamesPerPage); i++) {\n    pageNumbers.push(i);\n  } // Definimos cantidad de páginas según la cantidad de juegos existentes (varía con los filtrados) diviéndolo por la cantidad de juegos que mostraremos por cada una (definido en 15)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.paginate,\n    children: [pageNumbers.length > 1 && currentPage !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"primary\",\n      onClick: () => prevPage(),\n      children: \"< Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), pageNumbers.map(num => /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: () => paginate(num),\n      children: num\n    }, num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this)), pageNumbers.length !== currentPage && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"primary\",\n      onClick: () => nextPage(),\n      children: ['> Next', \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Paginate;\nexport default Paginate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"names":["React","s","Paginate","props","gamesPerPage","allGames","currentPage","paginate","prevPage","nextPage","pageNumbers","i","Math","ceil","push","length","map","num"],"sources":["/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Paginate/Paginate.js"],"sourcesContent":["import React from \"react\";\nimport s from './Paginate.module.css'\n\nconst Paginate = (props) => {\n    const { gamesPerPage, allGames, currentPage, paginate, prevPage, nextPage } = props;\n\n    const pageNumbers = []\n\n  for (let i =1; i <= Math.ceil(allGames / gamesPerPage); i++) {\n    pageNumbers.push(i);\n  } // Definimos cantidad de páginas según la cantidad de juegos existentes (varía con los filtrados) diviéndolo por la cantidad de juegos que mostraremos por cada una (definido en 15)\n\n  return (\n        <div className={s.paginate}>\n        {\n        pageNumbers.length>1 &&\n        currentPage !==1 && (\n        <button  type='primary' onClick={() => prevPage()}>{\"< Previous\"}</button>)}\n        {pageNumbers.map((num) => (\n          <a key={num} onClick={() => paginate(num)}>{num}</a>\n        ))}\n        {pageNumbers.length !== currentPage && (\n        <button type='primary' onClick={() => nextPage()}>{'> Next'} </button>)}\n        </div>\n    )\n}\n\nexport default Paginate;\n\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,uBAAd;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EACxB,MAAM;IAAEC,YAAF;IAAgBC,QAAhB;IAA0BC,WAA1B;IAAuCC,QAAvC;IAAiDC,QAAjD;IAA2DC;EAA3D,IAAwEN,KAA9E;EAEA,MAAMO,WAAW,GAAG,EAApB;;EAEF,KAAK,IAAIC,CAAC,GAAE,CAAZ,EAAeA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUR,QAAQ,GAAGD,YAArB,CAApB,EAAwDO,CAAC,EAAzD,EAA6D;IAC3DD,WAAW,CAACI,IAAZ,CAAiBH,CAAjB;EACD,CAPyB,CAOxB;;;EAEF,oBACM;IAAK,SAAS,EAAEV,CAAC,CAACM,QAAlB;IAAA,WAEAG,WAAW,CAACK,MAAZ,GAAmB,CAAnB,IACAT,WAAW,KAAI,CADf,iBAEA;MAAS,IAAI,EAAC,SAAd;MAAwB,OAAO,EAAE,MAAME,QAAQ,EAA/C;MAAA,UAAoD;IAApD;MAAA;MAAA;MAAA;IAAA,QAJA,EAKCE,WAAW,CAACM,GAAZ,CAAiBC,GAAD,iBACf;MAAa,OAAO,EAAE,MAAMV,QAAQ,CAACU,GAAD,CAApC;MAAA,UAA4CA;IAA5C,GAAQA,GAAR;MAAA;MAAA;MAAA;IAAA,QADD,CALD,EAQCP,WAAW,CAACK,MAAZ,KAAuBT,WAAvB,iBACD;MAAQ,IAAI,EAAC,SAAb;MAAuB,OAAO,EAAE,MAAMG,QAAQ,EAA9C;MAAA,WAAmD,QAAnD;IAAA;MAAA;MAAA;MAAA;IAAA,QATA;EAAA;IAAA;IAAA;IAAA;EAAA,QADN;AAaD,CAtBD;;KAAMP,Q;AAwBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}