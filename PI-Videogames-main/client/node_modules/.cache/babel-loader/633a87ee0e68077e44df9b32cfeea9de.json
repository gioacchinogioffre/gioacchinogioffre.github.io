{"ast":null,"code":"import { GET_VIDEOGAME_DETAIL, DELETE_VIDEOGAME, CREATE_VIDEOGAME, GET_ALL_VIDEOGAMES, GET_GENRES, GET_FILTERS, GET_ORDERS } from '../actions/index';\nconst initialState = {\n  filteredVideogames: [],\n  videogames: [],\n  videogameDetail: [],\n  genres: [],\n  orders: [],\n  msg: ''\n};\nexport default function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ALL_VIDEOGAMES:\n      return { ...state,\n        videogames: action.payload,\n        filteredVideogames: action.payload\n      };\n\n    case GET_VIDEOGAME_DETAIL:\n      return { ...state,\n        videogameDetail: [action.payload]\n      };\n\n    case CREATE_VIDEOGAME:\n      return { ...state,\n        videogames: [...state.videogames, action.payload.game],\n        msg: action.payload.msg\n      };\n\n    case DELETE_VIDEOGAME:\n      return { ...state\n      };\n\n    case GET_GENRES:\n      return { ...state,\n        genres: action.payload\n      };\n\n    case GET_FILTERS:\n      let filters = [...state.videogames];\n      let byOrigin = action.payload.filterByOrigin;\n      let byGenre = action.payload.filterByGenre;\n      let byName = action.payload.searchByName;\n      let byPlatforms = action.payload.filterByPlatforms;\n      console.log(byGenre); // if(byGenre !== 'all') { \n      //     filters = filters.filter(videogame => {\n      //         let genre = videogame.genres.find(vg => vg.name.includes(byGenre))\n      //         return genre})\n      //     }\n\n      if (byGenre.length > 0) {\n        if (byGenre.includes('All')) {} else {\n          for (let i = 0; i < byGenre.length; i++) {\n            filters = filters.filter(videogame => {\n              let genre = videogame.genres.find(vg => vg.name.includes(byGenre[i]));\n              return genre;\n            });\n          }\n        }\n      } // console.log(byGenre)\n\n\n      if (byPlatforms !== 'All Platforms') {\n        filters = filters.filter(videogame => {\n          let platform = videogame.platforms.find(p => p == byPlatforms);\n          return platform;\n        });\n      }\n\n      if (byOrigin === 'Created') filters = filters.filter(videogame => videogame.createdOnDb === true);\n      if (byOrigin === 'Api') filters = filters.filter(videogame => videogame.createdOnDb === undefined);\n      if (byOrigin === 'All Games' && byGenre === 'all') filters = [...state.videogames];\n      if (byName) filters = filters.filter(vg => vg.name.toLowerCase().includes(byName.toLowerCase()));\n      return { ...state,\n        filteredVideogames: filters\n      };\n\n    case GET_ORDERS:\n      let vgOrder = [...state.filteredVideogames];\n      let byOrder = action.payload;\n      let byRating = action.payload;\n      if (byOrder === 'descending') vgOrder = vgOrder.sort((a, b) => {\n        if (a.rating < b.rating) return 1;\n        if (a.rating > b.rating) return -1;\n        return 0;\n      });\n      if (byOrder === 'ascending') vgOrder = vgOrder.sort((a, b) => {\n        if (a.rating > b.rating) return 1;\n        if (a.rating < b.rating) return -1;\n        return 0;\n      });\n      if (byRating === 'a-z') vgOrder = vgOrder.sort((a, b) => a.name.localeCompare(b.name));\n      if (byRating === 'z-a') vgOrder = vgOrder.sort((a, b) => b.name.localeCompare(a.name));\n      return { ...state,\n        filteredVideogames: vgOrder\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"names":["GET_VIDEOGAME_DETAIL","DELETE_VIDEOGAME","CREATE_VIDEOGAME","GET_ALL_VIDEOGAMES","GET_GENRES","GET_FILTERS","GET_ORDERS","initialState","filteredVideogames","videogames","videogameDetail","genres","orders","msg","rootReducer","state","action","type","payload","game","filters","byOrigin","filterByOrigin","byGenre","filterByGenre","byName","searchByName","byPlatforms","filterByPlatforms","console","log","length","includes","i","filter","videogame","genre","find","vg","name","platform","platforms","p","createdOnDb","undefined","toLowerCase","vgOrder","byOrder","byRating","sort","a","b","rating","localeCompare"],"sources":["/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/reducers/index.js"],"sourcesContent":["import { GET_VIDEOGAME_DETAIL, DELETE_VIDEOGAME, CREATE_VIDEOGAME, GET_ALL_VIDEOGAMES, GET_GENRES, GET_FILTERS, GET_ORDERS} from '../actions/index';\n\n\nconst initialState = {\n    filteredVideogames: [],\n    videogames: [],\n    videogameDetail:[],\n    genres: [],\n    orders: [],\n    msg: ''\n}\n\nexport default function rootReducer(state = initialState, action) {\n\n    switch(action.type) {\n        case GET_ALL_VIDEOGAMES: return {...state, videogames: action.payload, filteredVideogames:action.payload}\n\n        case GET_VIDEOGAME_DETAIL: return {...state, videogameDetail: [action.payload]}\n\n        case CREATE_VIDEOGAME: return {...state, videogames: [...state.videogames, action.payload.game], msg: action.payload.msg}\n\n        case DELETE_VIDEOGAME: return {...state}\n\n        case GET_GENRES: return {...state, genres: action.payload}\n\n        case GET_FILTERS: \n        let filters = [...state.videogames]\n        let byOrigin = action.payload.filterByOrigin\n        let byGenre = action.payload.filterByGenre\n        let byName = action.payload.searchByName\n        let byPlatforms = action.payload.filterByPlatforms\n\n        console.log(byGenre)\n      \n        // if(byGenre !== 'all') { \n        //     filters = filters.filter(videogame => {\n        //         let genre = videogame.genres.find(vg => vg.name.includes(byGenre))\n        //         return genre})\n        //     }\n\n          if(byGenre.length > 0) { \n            if (byGenre.includes('All')) {\n                \n            } else {\n                for (let i = 0; i < byGenre.length; i++) {\n                    filters = filters.filter(videogame => {\n                        let genre = videogame.genres.find(vg => vg.name.includes(byGenre[i]))\n                        return genre})\n                }\n            }\n            }\n            // console.log(byGenre)\n\n         if(byPlatforms !== 'All Platforms') { \n            filters = filters.filter(videogame => {\n                let platform = videogame.platforms.find(p => p == byPlatforms)\n                return platform})\n                }\n            \n        if(byOrigin === 'Created') filters = filters.filter(videogame => videogame.createdOnDb === true)\n        if(byOrigin === 'Api')  filters = filters.filter(videogame => videogame.createdOnDb === undefined)\n        if(byOrigin === 'All Games' && byGenre === 'all') filters =[...state.videogames]\n            \n        if(byName) filters = filters.filter(vg => vg.name.toLowerCase().includes(byName.toLowerCase()))\n            \n        return {...state, filteredVideogames: filters}\n\n        case GET_ORDERS:\n        let vgOrder = [...state.filteredVideogames]\n        let byOrder = action.payload\n        let byRating = action.payload\n    \n        if(byOrder === 'descending') vgOrder = vgOrder.sort((a,b) => {\n            if(a.rating < b.rating) return 1\n            if(a.rating > b.rating) return -1\n            return 0})\n\n        if(byOrder === 'ascending') vgOrder = vgOrder.sort((a,b) => {\n             if(a.rating > b.rating) return 1\n             if(a.rating < b.rating) return -1\n             return 0})\n\n        if(byRating === 'a-z') vgOrder = vgOrder.sort((a,b) => a.name.localeCompare(b.name))\n        if(byRating === 'z-a') vgOrder = vgOrder.sort((a,b) => b.name.localeCompare(a.name))\n\n        return {...state, filteredVideogames: vgOrder}\n        \n        default: return {...state}\n\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}