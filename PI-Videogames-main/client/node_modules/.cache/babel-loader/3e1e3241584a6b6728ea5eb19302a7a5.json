{"ast":null,"code":"import _toConsumableArray from\"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{GET_VIDEOGAME_DETAIL,DELETE_VIDEOGAME,CREATE_VIDEOGAME,GET_ALL_VIDEOGAMES,GET_GENRES,GET_FILTERS,GET_ORDERS,CLEAN_DETAIL,SET_LOADING}from'../actions/index';var initialState={filteredVideogames:[],videogames:[],videogameDetail:[],genres:[],loading:true};export default function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var _ret=function(){switch(action.type){case GET_ALL_VIDEOGAMES:return{v:_objectSpread(_objectSpread({},state),{},{videogames:action.payload,filteredVideogames:action.payload,loading:false})};case GET_VIDEOGAME_DETAIL:return{v:_objectSpread(_objectSpread({},state),{},{videogameDetail:[action.payload],loading:false})};case CREATE_VIDEOGAME:return{v:_objectSpread(_objectSpread({},state),{},{videogames:[].concat(_toConsumableArray(state.videogames),[action.payload.game]),msg:action.payload.msg})};case DELETE_VIDEOGAME:return{v:_objectSpread({},state)};case CLEAN_DETAIL:return{v:_objectSpread(_objectSpread({},state),{},{videogameDetail:[]})};case SET_LOADING:if(action.payload===false)return{v:_objectSpread(_objectSpread({},state),{},{loading:false})};else return{v:_objectSpread(_objectSpread({},state),{},{loading:true})};case GET_GENRES:return{v:_objectSpread(_objectSpread({},state),{},{genres:action.payload})};case GET_FILTERS:var filters=_toConsumableArray(state.videogames);var byOrigin=action.payload.filterByOrigin;var byGenre=action.payload.filterByGenre;var byName=action.payload.searchByName;var byPlatforms=action.payload.filterByPlatforms;if(byGenre.length>0){if(byGenre.includes('All')){}else{var _loop=function _loop(i){filters=filters.filter(function(videogame){var genre=videogame.genres.find(function(vg){return vg.name.includes(byGenre[i]);});return genre;});};for(var i=0;i<byGenre.length;i++){_loop(i);}}}if(byPlatforms.length>0){if(byPlatforms.includes('All Platforms')){}else{var _loop2=function _loop2(_i){filters=filters.filter(function(videogame){var platform=videogame.platforms.find(function(p){return p===byPlatforms[_i];});return platform;});};for(var _i=0;_i<byPlatforms.length;_i++){_loop2(_i);}}}if(byOrigin==='Ki')filters=filters.filter(function(videogame){return videogame.createdOnDb===true;});if(byOrigin==='Popular')filters=filters.filter(function(videogame){return videogame.createdOnDb===undefined;});if(byOrigin==='All Games'&&byGenre==='All Genres')filters=_toConsumableArray(state.videogames);if(byName)filters=filters.filter(function(vg){return vg.name.toLowerCase().includes(byName.toLowerCase());});return{v:_objectSpread(_objectSpread({},state),{},{filteredVideogames:filters,loading:false})};case GET_ORDERS:var vgOrder=_toConsumableArray(state.filteredVideogames);var byOrder=action.payload;var byRating=action.payload;if(byOrder==='descending')vgOrder=vgOrder.sort(function(a,b){if(a.rating<b.rating)return 1;if(a.rating>b.rating)return-1;return 0;});if(byOrder==='ascending')vgOrder=vgOrder.sort(function(a,b){if(a.rating>b.rating)return 1;if(a.rating<b.rating)return-1;return 0;});if(byRating==='a-z')vgOrder=vgOrder.sort(function(a,b){return a.name.localeCompare(b.name);});if(byRating==='z-a')vgOrder=vgOrder.sort(function(a,b){return b.name.localeCompare(a.name);});return{v:_objectSpread(_objectSpread({},state),{},{filteredVideogames:vgOrder})};default:return{v:_objectSpread({},state)};}}();if(typeof _ret===\"object\")return _ret.v;}","map":{"version":3,"names":["GET_VIDEOGAME_DETAIL","DELETE_VIDEOGAME","CREATE_VIDEOGAME","GET_ALL_VIDEOGAMES","GET_GENRES","GET_FILTERS","GET_ORDERS","CLEAN_DETAIL","SET_LOADING","initialState","filteredVideogames","videogames","videogameDetail","genres","loading","rootReducer","state","action","type","payload","game","msg","filters","byOrigin","filterByOrigin","byGenre","filterByGenre","byName","searchByName","byPlatforms","filterByPlatforms","length","includes","i","filter","videogame","genre","find","vg","name","platform","platforms","p","createdOnDb","undefined","toLowerCase","vgOrder","byOrder","byRating","sort","a","b","rating","localeCompare"],"sources":["/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/reducers/index.js"],"sourcesContent":["import { GET_VIDEOGAME_DETAIL, DELETE_VIDEOGAME, CREATE_VIDEOGAME, GET_ALL_VIDEOGAMES, GET_GENRES, GET_FILTERS, GET_ORDERS, CLEAN_DETAIL, SET_LOADING} from '../actions/index';\n\n\nconst initialState = {\n    filteredVideogames: [],\n    videogames: [],\n    videogameDetail:[],\n    genres: [],\n    loading: true\n}\n\nexport default function rootReducer(state = initialState, action) {\n\n    switch(action.type) {\n        case GET_ALL_VIDEOGAMES: return {...state, videogames: action.payload, filteredVideogames:action.payload, loading:false}\n\n        case GET_VIDEOGAME_DETAIL: return {...state, videogameDetail: [action.payload], loading:false}\n\n        case CREATE_VIDEOGAME: return {...state, videogames: [...state.videogames, action.payload.game], msg: action.payload.msg}\n\n        case DELETE_VIDEOGAME: return {...state}\n\n        case CLEAN_DETAIL: return {...state, videogameDetail: []}\n\n        case SET_LOADING: \n        if (action.payload === false) return {...state, loading: false}\n        else return {...state, loading: true}\n\n        case GET_GENRES: return {...state, genres: action.payload}\n\n        case GET_FILTERS: \n        let filters = [...state.videogames]\n        let byOrigin = action.payload.filterByOrigin\n        let byGenre = action.payload.filterByGenre\n        let byName = action.payload.searchByName\n        let byPlatforms = action.payload.filterByPlatforms\n\n          if(byGenre.length > 0) { \n            if (byGenre.includes('All')) {\n                \n            } else {\n                for (let i = 0; i < byGenre.length; i++) {\n                    filters = filters.filter(videogame => {\n                        let genre = videogame.genres.find(vg => vg.name.includes(byGenre[i]))\n                        return genre})\n                }\n            }\n            }\n        \n                if(byPlatforms.length > 0) { \n                    if(byPlatforms.includes('All Platforms')) {\n                    }\n                    else {for (let i = 0; i < byPlatforms.length; i++) {\n                            filters = filters.filter(videogame => {\n                                let platform = videogame.platforms.find(p => p === byPlatforms[i])\n                                return platform})}\n                        }\n                        }\n\n\n                \n        if(byOrigin === 'Ki') filters = filters.filter(videogame => videogame.createdOnDb === true)\n        if(byOrigin === 'Popular')  filters = filters.filter(videogame => videogame.createdOnDb === undefined)\n        if(byOrigin === 'All Games' && byGenre === 'All Genres') filters =[...state.videogames]\n            \n        if(byName) filters = filters.filter(vg => vg.name.toLowerCase().includes(byName.toLowerCase()))\n            \n        return {...state, filteredVideogames: filters, loading: false}\n\n        case GET_ORDERS:\n        let vgOrder = [...state.filteredVideogames]\n        let byOrder = action.payload\n        let byRating = action.payload\n    \n        if(byOrder === 'descending') vgOrder = vgOrder.sort((a,b) => {\n            if(a.rating < b.rating) return 1\n            if(a.rating > b.rating) return -1\n            return 0})\n\n        if(byOrder === 'ascending') vgOrder = vgOrder.sort((a,b) => {\n             if(a.rating > b.rating) return 1\n             if(a.rating < b.rating) return -1\n             return 0})\n\n        if(byRating === 'a-z') vgOrder = vgOrder.sort((a,b) => a.name.localeCompare(b.name))\n        if(byRating === 'z-a') vgOrder = vgOrder.sort((a,b) => b.name.localeCompare(a.name))\n\n        return {...state, filteredVideogames: vgOrder}\n        \n        default: return {...state}\n\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}