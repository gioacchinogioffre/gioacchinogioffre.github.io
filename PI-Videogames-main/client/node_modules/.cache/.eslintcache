[{"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/index.js":"1","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/App.js":"2","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/reportWebVitals.js":"3","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/NavBar/NavBar.js":"4","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/VideogameDetail/VideogameDetail.js":"5","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Form/Form.js":"6","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/LandingPage/LandingPage.js":"7","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/store/index.js":"8","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/reducers/index.js":"9","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/actions/index.js":"10","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Home/Home.js":"11","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Paginate/Paginate.js":"12","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/SearchBar/SearchBar.js":"13","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Login/Login.js":"14","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Modals/ModalForm.js":"15","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Modals/ModalDelete.js":"16","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/FAQ/FAQ.js":"17","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Modals/ModalNotFound.js":"18","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Filters/Filters.js":"19","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/NotFound/NotFound.js":"20"},{"size":810,"mtime":1655643786102,"results":"21","hashOfConfig":"22"},{"size":951,"mtime":1657205875589,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1655502636029,"results":"24","hashOfConfig":"22"},{"size":2359,"mtime":1657201708935,"results":"25","hashOfConfig":"22"},{"size":2805,"mtime":1657042352576,"results":"26","hashOfConfig":"22"},{"size":9560,"mtime":1657229564305,"results":"27","hashOfConfig":"22"},{"size":3480,"mtime":1656955690629,"results":"28","hashOfConfig":"22"},{"size":327,"mtime":1656627608613,"results":"29","hashOfConfig":"22"},{"size":3637,"mtime":1657201918186,"results":"30","hashOfConfig":"22"},{"size":2871,"mtime":1657042256502,"results":"31","hashOfConfig":"22"},{"size":9479,"mtime":1657124014942,"results":"32","hashOfConfig":"22"},{"size":1832,"mtime":1657122667145,"results":"33","hashOfConfig":"22"},{"size":1644,"mtime":1657201417103,"results":"34","hashOfConfig":"22"},{"size":744,"mtime":1656892330829,"results":"35","hashOfConfig":"22"},{"size":342,"mtime":1656893105128,"results":"36","hashOfConfig":"22"},{"size":1987,"mtime":1656893091866,"results":"37","hashOfConfig":"22"},{"size":2399,"mtime":1656899687374,"results":"38","hashOfConfig":"22"},{"size":453,"mtime":1656959963228,"results":"39","hashOfConfig":"22"},{"size":7312,"mtime":1657201882164,"results":"40","hashOfConfig":"22"},{"size":732,"mtime":1656958150719,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"8efboh",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/index.js",[],["86","87"],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/App.js",[],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/reportWebVitals.js",[],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/NavBar/NavBar.js",[],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/VideogameDetail/VideogameDetail.js",[],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Form/Form.js",["88","89","90","91","92","93"],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/LandingPage/LandingPage.js",[],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/store/index.js",[],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/reducers/index.js",[],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/actions/index.js",[],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Home/Home.js",["94","95"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {  useDispatch, useSelector } from 'react-redux';\nimport { getAllVideogames, getFilters, getGenres, getOrders, setLoading } from '../../actions';\nimport h from './Home.module.css';\nimport Paginate from '../Paginate/Paginate';\nimport NavBar from \"../NavBar/NavBar\";\nimport xbox from '../Icons/xbox-2.png'\nimport play from '../Icons/playstation.png'\nimport rating from '../Icons/star-2.png'\nimport nintendo from '../Icons/nintendo.png'\nimport wii from '../Icons/wii-u.png'\nimport android from '../Icons/android.png'\nimport linux from '../Icons/linux.png'\nimport pc from '../Icons/pc.png'\nimport mac from '../Icons/mac.png'\nimport loadingGif from '../Icons/loadingII.gif'\nimport {NotFound} from '../Modals/ModalNotFound';\nimport Filters from '../Filters/Filters';\n\n\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    \n    // Filters - Local States\n    const[selected, setSelected] = useState({genres: 'All Genres', platforms: 'All Platforms', games: 'All Games'}); // inicializamos estado local selected para que cuando usemos el botón clear filters seteemos estos valores por defecto en cada lista de filtros.\n    const [searchByName, setSearchByName] = useState(null);\n    const [filterByGenre, setFilterByGenre] = useState([]); // Initial state en arreglo vacío para ir pusheando los valores que seleccionamos en la lista desplegada y que podamos filtrar por esos valores al mismo tiempo (hacemos lo mismo con arreglo platforms)\n    const [filterByOrigin, setFilterByOrigin] = useState(null)\n    const [filterByPlatforms, setFilterByPlatforms] = useState([]);\n    const [renderFilters, setRenderFilters] = useState({origin: '', genres:[], platforms:[]}); // Estado para renderizar los filtros que vamos aplicando para que el usuario pueda verlos y eliminarlos si quiere.\n\n\n    const allGames = useSelector(state => state.filteredVideogames) // Estado global que trae los juegos filtrados (en principio es una copia de TODOS los videojuegos)\n    const loading = useSelector(state => state.loading); // Estado global de loading (valor inicial true)\n    \n    // Paginate - Local States\n    const [currentPage, setCurrentPage] = useState(1);\n    const [gamesPerPage] = useState(15); // seteamos la cantidad de juegos que mostraremos por página\n    const indexOfLastGame = currentPage * gamesPerPage;\n    const indexOfFirstGame = indexOfLastGame - gamesPerPage;\n    const currentGames = allGames.slice(indexOfFirstGame, indexOfLastGame) // Instanciamos constante donde guardaremos los juegos que mostraremos por página según los indices correspondientes.\n    const paginate = (pageNumber) => setCurrentPage(pageNumber); // seteamos el estado currentPage con el número de página que le pasemos por parámetro. Invocaremos esta función al hacer click en el botón de la página.\n    const prevPage= () => setCurrentPage(currentPage - 1);\n    const nextPage= () => setCurrentPage(currentPage + 1);\n    const [index, setIndex] = useState({startIndex: 0, endIndex: 3})\n\n\n   useEffect(() => { // despachamos las actions para obtener los juegos y los géneros cada vez que se monte el componente.\n       dispatch(getGenres())\n       if(!allGames.length) dispatch(getAllVideogames()) // loading pasa a false.\n       else dispatch(setLoading(false))\n    }, [])\n    \n    useEffect(() => { \n        setCurrentPage(1)\n    }, [allGames])\n\n    useEffect(() => {return () => dispatch(setLoading())}, []) // despachamos la action para setear el loading a true cada vez que se desmonte el componente.\n\n\n    const handleOnSelectOrder = (e) => { \n        setCurrentPage(1)\n        let orderGames = e.target.value;\n        dispatch(getOrders(orderGames))\n      }\n\n      const handleOnClear = () => { // función para limpiar los filtros. Seteamos nuestros estados locales a sus valores por defecto y despachamos la action de filtrado por dichos valores (no le paso los estados directamente porque la action puede despacharse y tal vez los mismos no se actualizaron aún)\n        setSelected({genres: 'All Genres', platforms: 'All Platforms', games: 'All Games'})\n        setFilterByGenre([])\n        setFilterByOrigin(null)\n        setFilterByPlatforms([])\n        setSearchByName(null)\n        setIndex({startIndex: 0, endIndex: 3})\n        setRenderFilters({origin: '', genres:[], platforms:[]})\n        dispatch(getFilters([], null, null, []))\n      }\n\n    return (\n        \n        <header className={h.Home}>\n                     <NavBar filterByGenre={filterByGenre} filterByOrigin={filterByOrigin} searchByName={searchByName} filterByPlatforms={filterByPlatforms} handleOnClear={handleOnClear}>\n                    </NavBar>\n\n         <div className={h.container}>\n\n              <div className={h.firstC}>\n                 <Filters index={index} setIndex={setIndex} setCurrentPage={setCurrentPage} searchByName={searchByName} setSearchByName={setSearchByName} filterByGenre={filterByGenre} setFilterByGenre={setFilterByGenre} filterByOrigin={filterByOrigin} setFilterByOrigin={setFilterByOrigin} filterByPlatforms={filterByPlatforms} setFilterByPlatforms={setFilterByPlatforms} renderFilters={renderFilters} setRenderFilters={setRenderFilters} handleOnClear={handleOnClear} selected={selected} setSelected={setSelected}></Filters>\n             </div>\n                    <div>\n                    <div className={h.orders}>\n                        <h4>Sort by: </h4>\n                     <select defaultValue='alphabetic' name='alphabetic' onChange={(e) => handleOnSelectOrder(e)}>\n                                <option disabled value='alphabetic'>Name</option>\n                                <option value='a-z'>A-Z</option>\n                                <option value='z-a'>Z-A</option>\n                         </select>\n                        <select defaultValue='rating' name='rating' onChange={(e) => handleOnSelectOrder(e)}>\n                            <option disabled value='rating'>Rating</option>\n                                <option value='descending'>Highest</option>\n                                <option  value='ascending'>Lowest</option>\n                        </select>\n                    </div>\n\n                    {allGames.length >= 100 && <h1 className={h.trending}>Trending now</h1>}\n                    \n                    <div className={h.vgContainer}>\n                         {!loading ? (currentGames.length ? currentGames.map(vg => (\n                            <div key={vg.id} className={h.cardC}>\n                            <Link className={h.link} to={`/videogames/${vg.id}`}>\n                                    <div className={h.cardRating}>\n                                        <p>{vg.rating}</p>\n                                        <img alt='ratingIcon' src={rating}></img>\n                                    </div>\n                                    <div className={h.Card} key={vg.id}>\n                                    <img className={h.vgImage} src={vg.background_image} alt='videogameImage'/>\n                                         <div className ={h.cardTitle}>{vg.name}</div>\n                                         <div className ={h.cardGenres}>{vg.genres.map(g => g.name).join(' | ')}</div>\n                                  \n                                    <div className={h.platforms}>\n                                         {vg.platforms.filter(p => p.includes('Xbox')).length > 0 && <img className={h.imageP} src={xbox} alt='xbox'></img>}\n                                         {vg.platforms.filter(p => p.includes('PlayStation')).length > 0 && <img className={h.imageP} src={play} alt='ps'></img>}\n                                         {vg.platforms.filter(p => p.includes('Wii U')).length > 0 &&  <img className={h.imageP} src={wii} alt='wii'></img>}\n                                         {vg.platforms.filter(p => p.includes('Nintendo')).length > 0 &&  <img className={h.imageP} src={nintendo} alt='nintendo'></img>}\n                                         {vg.platforms.filter(p => p.includes('Android')).length > 0 &&  <img className={h.imageP} src={android} alt='android'></img>}\n                                         {vg.platforms.filter(p => p.includes('Linux')).length > 0 &&  <img className={h.imageP} src={linux} alt='linux'></img>}\n                                         {vg.platforms.filter(p => p.includes('PC')).length > 0 &&  <img className={h.imageP} src={pc} alt='pc'></img>}\n                                         {vg.platforms.filter(p => p.includes('macOS')).length > 0 &&  <img className={h.imageP} src={mac} alt='mac'></img>}\n                                    </div>\n                            </div></Link> \n                            </div>)) : <NotFound/>)\n                            : <div className={h.loading}>\n                                <img src={loadingGif} alt='loading'></img>\n                                <h1>loading...</h1>\n                              </div>\n                            }\n                    </div>\n                    </div>\n    \n            </div>\n                    <div className={h.paginate}>\n                    <Paginate  gamesPerPage={gamesPerPage}  allGames={allGames.length}  currentPage={currentPage}\n                    paginate={paginate} prevPage={prevPage}  nextPage={nextPage} index={index} setIndex={setIndex}/>\n                    </div>\n        </header>\n    )\n}\n\nexport default Home;\n\n","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Paginate/Paginate.js",["96","97"],"import React, {useState} from \"react\";\nimport s from './Paginate.module.css'\n\nconst Paginate = (props) => {\n    const { gamesPerPage, allGames, currentPage, paginate, prevPage, nextPage, index, setIndex } = props;\n\n    const pageNumbers = []\n\n  for (let i =1; i <= Math.ceil(allGames / gamesPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  // const [index, setIndex] = useState({startIndex: 0, endIndex: 3})\n\n  return (\n        <div className={s.paginate}>\n        {currentPage !==1 && ( // si currentPage es distinto de uno, renderizamos el botón de previous. Le pasamos la función prevPage para setear la current page a la anterior.\n        <button  type='primary' onClick={() => {prevPage(); setIndex({startIndex: index.startIndex - 1, endIndex: index.endIndex - 1,  })   }}>{\"< Previous\"}</button>)}\n\n        {/* { pageNumbers.map((num) => (\n          <a key={num} onClick={() => paginate(num)}>{num}</a> // Por cada número de página, renderizamos un botón que invocará la función paginate seteando  el número de página actual.\n        ))} */}\n\n         { pageNumbers.slice(index.startIndex, index.endIndex).map((num) => (\n          <a key={num} onClick={() => paginate(num)}>{num}</a> // Por cada número de página, renderizamos un botón que invocará la función paginate seteando  el número de página actual.\n        ))}\n\n          {/* {currentPage !== pageNumbers.length} */}\n        \n        {pageNumbers.length !== currentPage && ( // Si la cantidad de páginas es distinta a la actual, renderizamos el botón de next. Le pasamos la función nextPage para setear la current page a la siguiente.\n        <button type='primary' onClick={() => {nextPage(); setIndex({startIndex: index.startIndex + 1, endIndex: index.endIndex + 1,  })  }}>{'Next >'} </button>)}\n        </div>\n    )\n}\n\nexport default Paginate;\n\n","/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/SearchBar/SearchBar.js",[],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Login/Login.js",[],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Modals/ModalForm.js",[],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Modals/ModalDelete.js",[],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/FAQ/FAQ.js",[],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Modals/ModalNotFound.js",[],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/Filters/Filters.js",[],"/Users/joaco/Desktop/Henry/PI-videogames/PI-Videogames-main/client/src/components/NotFound/NotFound.js",["98"],"import React, { Component } from 'react';\nimport s from './NotFound.module.css'\nimport ghost from '../Icons/ghostII.png'\nimport NavBar from '../NavBar/NavBar';\nimport {Link} from 'react-router-dom';\n\nexport class NotFound extends Component {\n    render(){\n    return (  \n        <div>\n            <div className={s.notFound}>\n                <h1>ERROR</h1>\n                <div>\n                <h1 className={s.errorTitle}>4</h1><img src={ghost} alt='ghost'></img><h1 className={s.errorTitle}>4</h1>\n                </div>\n                <h2 className={s.errorSubTitle}>page not found</h2>\n                <Link to='/home'> <button>GO HOME!</button></Link>\n            </div>\n        </div>\n        )\n}\n}\n\nexport default NotFound\n",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":71,"column":12,"nodeType":"105","endLine":71,"endColumn":14,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":104,"column":42,"nodeType":"109","messageId":"110","endLine":104,"endColumn":44},{"ruleId":"107","severity":1,"message":"108","line":105,"column":33,"nodeType":"109","messageId":"110","endLine":105,"endColumn":35},{"ruleId":"107","severity":1,"message":"108","line":118,"column":22,"nodeType":"109","messageId":"110","endLine":118,"endColumn":24},{"ruleId":"107","severity":1,"message":"111","line":119,"column":55,"nodeType":"109","messageId":"110","endLine":119,"endColumn":57},{"ruleId":"107","severity":1,"message":"111","line":121,"column":66,"nodeType":"109","messageId":"110","endLine":121,"endColumn":68},{"ruleId":"103","severity":1,"message":"112","line":54,"column":8,"nodeType":"105","endLine":54,"endColumn":10,"suggestions":"113"},{"ruleId":"103","severity":1,"message":"104","line":60,"column":60,"nodeType":"105","endLine":60,"endColumn":62,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":16,"nodeType":"117","messageId":"118","endLine":1,"endColumn":24},{"ruleId":"119","severity":1,"message":"120","line":25,"column":11,"nodeType":"121","endLine":25,"endColumn":54},{"ruleId":"115","severity":1,"message":"122","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":14},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["125"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'allGames.length' and 'dispatch'. Either include them or remove the dependency array.",["126"],["127"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'NavBar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"128","fix":"132"},"Update the dependencies array to be: [dispatch]",{"range":"133","text":"134"},"Update the dependencies array to be: [allGames.length, dispatch]",{"range":"135","text":"136"},{"range":"137","text":"134"},[2766,2768],"[dispatch]",[3350,3352],"[allGames.length, dispatch]",[3487,3489]]